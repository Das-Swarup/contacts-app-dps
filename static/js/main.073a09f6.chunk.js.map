{"version":3,"sources":["MyComponents/Header.js","MyComponents/AddContact.js","MyComponents/ContactItem.js","MyComponents/Contacts.js","MyComponents/AllContacts.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","title","id","AddContact","useState","setTitle","mail","setMail","num","setNum","onSubmit","e","preventDefault","addContact","alert","htmlFor","type","value","onChange","target","ContactItem","contact","onDelete","desc","onClick","Contacts","contacts","length","map","sno","AllContacts","initContact","localStorage","getItem","JSON","parse","setContacts","useEffect","setItem","stringify","console","log","filter","App","myContact","searchBar","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.073a09f6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n<link rel=\"stylesheet\" href=\"/src/App.css\" />\r\n\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/Home\">{props.title}</Link>\r\n\r\n                <div className=\"navbar\" id=\"\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"btn-header\" aria-current=\"page\" to=\"/add\">Add Contacts</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"btn-header\" to=\"all\">All Contacts</Link>\r\n                        </li>\r\n                    </ul>\r\n\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n","\r\nimport React, { useState } from 'react';\r\n<link rel=\"stylesheet\" href=\"/src/App.css\" />\r\nexport const AddContact = (props) => {\r\n    const[title,setTitle]=useState(\"\");\r\n    const [mail, setMail] = useState(\"\");\r\n    const [num, setNum] = useState(\"\");\r\n    const submit=(e)=>{\r\n        e.preventDefault();\r\n        if(!title|| !num){\r\n            alert(\"Name or Number cannot be blank\")\r\n        }\r\n        else{\r\n        props.addContact(title,mail,num)\r\n        setTitle(\"\");\r\n        setMail(\"\");\r\n        setNum(\"\");\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"app-container\">\r\n        <div className=\"container my-3\">\r\n            <h3 className=\"text-center\">Add a Contact</h3>\r\n            <form onSubmit={submit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"title\" className=\"form-label\">Name</label>\r\n                    <input type=\"text\" value={title} onChange={(e)=>{setTitle(e.target.value)}} className=\"form-control\" id=\"title\" aria-describedby=\"emailHelp\"/>\r\n                        \r\n                 </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"mail\" className=\"form-label\">E-mail</label>\r\n                        <input type=\"text\" value={mail} onChange={(e)=>{setMail(e.target.value)}} className=\"form-control\" id=\"desc\"/>\r\n                     </div>\r\n\r\n                     <div className=\"mb-3\">\r\n                         <label htmlFor=\"num\" className=\"form-label\">Number</label>\r\n                         <input type=\"value\" value={num} onChange={(e)=>{setNum(e.target.value)}} className=\"form-control\" id=\"num\" />\r\n                         </div>\r\n                        \r\n                <button type=\"submit\" className=\"add-btn\">Add</button>\r\n            </form>\r\n         </div>\r\n         </div>\r\n     )\r\n}\r\n","import React from 'react'\r\n\r\nexport const ContactItem = ({contact, onDelete}) => {\r\n    return (\r\n        <>\r\n        <hr/>\r\n        <div>\r\n            <p>Name: {contact.title}</p>\r\n            <p>E-Mail: {contact.desc}</p>\r\n            <p>Number: {contact.num}</p>\r\n            <button className=\"btn btn-sm btn-danger\" onClick={()=> {onDelete(contact)}}>Delete</button> \r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {ContactItem} from './ContactItem'\r\n\r\nexport const Contacts = (props) => {\r\n  \r\n  return (\r\n    <div className=\"container my-3\">\r\n      <h3 className=\" text-center text-700 my-3\">Contacts</h3>\r\n      {props.contacts.length === 0? <h5 className=\"text-center my-5\"> No Contacts to display</h5>: \r\n      props.contacts.map((contact)=>{\r\n        return (\r\n        <ContactItem contact={contact} key={contact.sno} onDelete={props.onDelete}/>\r\n        )\r\n      })}\r\n      <hr/>  \r\n    </div>\r\n  )\r\n}\r\n\r\n","\r\nimport { Contacts } from \"./Contacts\";\r\nimport React, { useState, useEffect } from 'react';\r\n<link rel=\"stylesheet\" href=\"/src/App.css\" />\r\n\r\nfunction AllContacts() {\r\n  let initContact;\r\n  if (localStorage.getItem(\"contacts\") === null) {\r\n    initContact = [];\r\n  }\r\n  else {\r\n    initContact = JSON.parse(localStorage.getItem(\"contacts\"));\r\n  }\r\n\r\n  \r\nconst [contacts, setContacts] = useState(initContact)\r\n\r\nuseEffect(() => {\r\n  localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n\r\n}, [contacts])\r\n\r\nconst onDelete = (contact) => {\r\n  console.log(\"I am ondelete of contact\", contact);\r\n  setContacts(contacts.filter((e) => {\r\n    return e !== contact;\r\n   }));\r\n  localStorage.getItem(\"contacts\", JSON.stringify(contacts));\r\n  }\r\n  return (\r\n    <div className=\"app-container\" id=\"App\">\r\n      <Contacts contacts={contacts} onDelete={onDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllContacts;","\nimport \"./App.css\";\nimport Header from \"./MyComponents/Header.js\";\nimport { AddContact } from './MyComponents/AddContact.js'\nimport AllContacts from './MyComponents/AllContacts.js';\nimport React, { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n<link rel=\"stylesheet\" href=\"/src/App.css\" />\n\nfunction App() {\n  let initContact;\n  if (localStorage.getItem(\"contacts\") === null) {\n    initContact = [];\n  }\n  else {\n    initContact = JSON.parse(localStorage.getItem(\"contacts\"));\n  }\n  const addContact = (title, desc,num) => {\n    let sno;\n    if (contacts.length === 0) {\n      sno = 1\n    }\n    else {\n      sno = contacts[contacts.length - 1].sno + 1;\n    }\n    const myContact = {\n      sno: sno,\n      title: title,\n      desc: desc,\n      num: num,\n    }\n    setContacts([...contacts, myContact])\n    console.log(myContact);\n\n  }\n  const [contacts, setContacts] = useState(initContact)\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n\n  }, [contacts])\n  return (\n    <Router>\n      <Header title=\"Your Contacts List\" searchBar={false} />\n\n      <Switch>\n        <Route exact path=\"/add\" render={() => {\n          return (\n            <>\n              <AddContact addContact={addContact} />\n            </>)\n        }}>\n        </Route>\n        <Route exact path=\"/all\">\n          <AllContacts />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}